#!/usr/bin/env python3

import argparse
import json
import rpc
import sys
import xml.etree.ElementTree
import datetime

parser = argparse.ArgumentParser(description='Toodledo importer v1.0')

parser.add_argument('--url', default='http://localhost:8080/rpc', help='url of rpc server to connect to. default: %(default)s')
parser.add_argument('--user', default='admin', help='user to login. default: %(default)s')
parser.add_argument('--password', default='admin', help='password. default: %(default)s')
parser.add_argument('file',  nargs=1, help='toodle XML export file')

args = parser.parse_args()

#initialise the rpc client class
rpc_client=rpc.RpcClient(args.url)

#first login using the specified user and pass
user=rpc_client.request("core.Users.login", name=args.user, password=args.password)

#read and parse XML
element=xml.etree.ElementTree.parse(args.file[0])


#note: might be incomplete
priorities={
	"Low": '3',
	"Medium": '4',
	"High": '5'
}

statusses={
	"Next Action": "next_action",
	"None": "none",
	"Planning": "project",
	"Reference": "reference",
	"Someday": "someday",
	"Waiting": "waiting"
}

#traverse all todo items
for child in element.findall("item"):
	#determine uniq id so we can check if it already exists in tracer
	import_id=child.find("id").text
	result=rpc_client.request("ticket.Tickets.get_all", match={ "import_id": import_id })

	if len(result["data"])!=0:
		print ("Already imported ID "+import_id)
	else:
		print ("Adding ID "+import_id)
		doc={
			"import_id": import_id,
			"title": "",
			"desc": "",
			"start_date": None,
			"due_date": None,
			"ticket_priority": priorities[child.find("priority").text],
			"ticket_completed": child.find("completed").text!="0000-00-00",
			"owner": user['data']['user_id'],
			"allowed_groups": [] ,
			"deligated_users": [], 
			"relations": [],
			"tickets": [],
			"ticket_status": statusses[child.find("status").text]
		}

		title=child.find("title").text
		if title!=None:
			doc["title"]=title

		note=child.find("note").text
		if note!=None:
			doc["desc"]=note

		startdate=child.find("startdate").text
		if startdate!=None and startdate!="":
			doc["start_date"]=datetime.datetime.strptime(startdate, "%Y-%m-%d").timestamp()

		duedate=child.find("duedate").text
		if duedate!=None and duedate!="":
			doc["due_date"]=datetime.datetime.strptime(duedate, "%Y-%m-%d").timestamp()

		print(doc)
		rpc_client.request("ticket.Tickets.put", **doc)

print("DONE")


